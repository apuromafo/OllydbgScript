// The Redirection of jumps from a program code on new section to which the code from areas with Stolen Code is transferred
// It is developed - vnekrilov
// The Script redirection jumps from a program code on new section of a file
// ATTENTION: the Script to start on дампе the unpacked program, after fastening of new section of a file into place 
// sections .rsrc or .data, created by a protector
// Date - on January, 08th 2010
// Establish tags on all exceptions of a debugger
// The Script was tested only on WinXP, OllyDbg 1.10, ODBGScript 1.78.1
// Supports Asprotect 1.32, 1.33, 1.35, 1.4, 1.41, 1.5, 1.51, 2.0, 2.1, 2.11, 2.2beta, 2.2, 2.3, 2.4, 2.41, 2.5, 2.51, 2.52, 2.6

var Address_JMP                                 // Address of an arrangement of a jump in a program code
var Address_New_Section                         // Address in new section of the file, corresponding ImageBase areas with Stolen Code
var ImageBase_Stolen_Code                       // ImageBase areas with Stolen Code where the jump should be carried out
var cur_buffer                                  // Address of the current buffer of the memory used for processing of values
var Table_Correspondent                         // Table of conformity of areas with Stolen Code and new section of a file
var Table_Size_JMP                              // Size of the table of jumps
var Table_StolenCode_RSRC                       // Address of memory with the written down addresses of areas with Stolen Code and corresponding addresses in new section of a file
var Address_Inject                              // Address for record of a code of an inoculation
var temp_1                                      // Temporally variables
var temp_2                                    
var temp_3                                    
var temp_4                                    
var temp_5                                    

msg "Attention!!! Before start of this script the script 'Carrying over Stolen Code to section of file RSRC.osc' or 'Carrying over Stolen Code to section of file ADATA.osc' should be executed. A script to start on dump the unpacked program!"

cmp $VERSION,"1.78"                             // Define the version established plugin ODbgScript
jae start_script                  
msg "This script works with plugin ODbgscript 1.78 and above!"
ret                                             // Finish script work 

//////////////////////////////////////////////////////////////////////////////
//
// Work with the program
//
//////////////////////////////////////
// ----------------------------------------------------------------------------
// Load a file table_JMP.bin, necessary for script work
// ----------------------------------------------------------------------------
start_script:
alloc 4000                                      // Allocate memory area
mov Address_Inject,$RESULT               
mov temp_1,Address_Inject             
add temp_1,500                        

load_file:
lm temp_1,1000,"table_JMP.bin"                 // Load a file table_JMP.bin
cmp $RESULT,0
jne select_parameters
msg "Error!!! You have not loaded a file 'table_JMP.bin'! Start a script 'Search of areas with Stolen Code and recovery in them of the emulated instructions.osc', and create this file."
jmp load_file

select_parameters:
mov temp_1,Address_Inject                   
add temp_1,1500                                 // The address for loading of the table of conformity of areas with Stolen Code and new section of a file

MSGYN "Attention!!! Specify, on what place you have inserted new section of a file - '.rsrc' or '.data', created Asprotect. If you have inserted new section to the place of section '.rsrc', press the button 'YES'. If you have inserted new section to the place of section '.data', press the button 'NO'."
CMP $RESULT,0                                   // button NO Is pressed?
JE load_table_StolenCode_ADATA_bin           
CMP $RESULT,1                                   // button YES Is pressed?
JE load_table_StolenCode_RSRC_bin             
CMP $RESULT,2                                   // button CANCEL Is pressed?
JMP finalize                                    


load_table_StolenCode_RSRC_bin:
lm temp_1,1000,"table_StolenCode_RSRC.bin"      // Load a file table_StolenCode_RSRC.bin
cmp $RESULT,0
jne write_inject
msg "Error!!! You have not loaded a file 'table_StolenCode_RSRC.bin'! Start a script 'Carrying over Stolen Code to section of file RSRC.osc', and create this file."
jmp load_table_StolenCode_RSRC_bin

load_table_StolenCode_ADATA_bin: 
lm temp_1,1000,"table_StolenCode_ADATA.bin"     // Load a file table_StolenCode_ADATA.bin
cmp $RESULT,0
jne write_inject
msg "Error!!! You have not loaded a file 'table_StolenCode_ADATA.bin'! Start a script 'Carrying over Stolen Code to section of file ADATA.osc', and create this file."
jmp load_table_StolenCode_RSRC_bin

// Write down an inoculation code
write_inject:
mov temp_1,Address_Inject

// Write down an inoculation code
mov [temp_1],#609CBE00053F00BB00153F008B0683F800743E83C6048B0E81E10000FF0F538B1381E20000FF0F3BCA740583C304EBEF83C3048B0B8B168B7BFC2BD703D18BFA2BF883EF05C600E989780183C6045BEBBB9D61909090#

// Correct an inoculation code
add temp_1,3                             
mov temp_2,Address_Inject                
add temp_2,500                                  // The address with the loaded table of jumps
mov [temp_1],temp_2                             
add temp_1,5                                    
mov temp_2,Address_Inject                       
add temp_2,1500                         
mov [temp_1],temp_2                     
mov temp_1,Address_Inject               
add temp_1,54                           
bp temp_1                               
mov temp_4,eip                          
mov eip,Address_Inject                  
run                                     
cmp eip,temp_1                                  // eip = temp_1?
je free_true
MSG "Error!!! In work of an inoculation for a redirection of jumps from a program code in new section there was a failure! Check up correctness of updating of an inoculation."
JMP finalize

free_true:
bc temp_1                                     
mov eip,temp_4                                
fill Address_Inject,100,00                      // Delete an inoculation code

// ----------------------------------------------------------------------------
// Write down the table of jumps with their binding to new section of a file 
// to which has transferred a code from areas with Stolen Code
// ----------------------------------------------------------------------------
mov temp_1,Address_Inject                     
add temp_1,500                                  // The address of memory with the loaded table of jumps
FIND temp_1,#0000000000000000#                
MOV temp_2,$RESULT                            
SUB temp_2,temp_1                               // The size of the table of jumps
mov Table_Size_JMP,temp_2                     

wtite_JMP:
cmp [temp_1],0                                  // Whether it is written down here 0?
je dumped_table_correct                       
mov temp_2,[temp_1]                           
gci temp_2,DESTINATION                        
mov temp_3,$RESULT                            
CMT temp_2,"* Jump from a program code on new section of a file with Stolen Code: "     
CMT temp_3," * Distance of a jump from a program code: " 
LOG temp_2,"* Jump from a program code on new section of a file with Stolen Code: " 
LOG temp_3," * Distance of a jump from a program code: " 
add temp_1,4                               
mov [temp_1],temp_3                        
add temp_1,4                               
jmp wtite_JMP                              

// ----------------------------------------------------------------------------
// Dumping the new table of jumps 
// ----------------------------------------------------------------------------
dumped_table_correct:
mov temp_1,Address_Inject                     
add temp_1,500                                
dm temp_1,Table_Size_JMP,"table_JMP_Patch.bin"

// ----------------------------------------------------------------------------
// Dumping the table of distances of jumps on new section of a file with the 
// transferred code from areas with Stolen Code 
// ----------------------------------------------------------------------------
mov temp_1,Address_Inject                   
add temp_1,500                              
add temp_1,4                                
mov temp_2,Address_Inject                   

write_distance:
cmp [temp_1],0                              
je dumped_table_distance                                  
mov temp_3,[temp_1]                         
mov [temp_2],temp_3                         
add temp_2,4                                
add temp_1,8                                
jmp write_distance                          

dumped_table_distance:
mov temp_2,Address_Inject                    
dm temp_2,Table_Size_JMP,"table_JMP_distance.bin"

msg "Attention!!! After end of work of a script, allocate in a debugger all area of a code of the program, and keep in a file the made changes!"
        
finalize:
FREE Address_Inject                             // Free the allocated area of memory
ret                                             // Finish script work
