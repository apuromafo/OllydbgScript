//Armadillo v3.XX - v8.XX Debug Blocker / Standard / Minimum script
//This script unpacks almost every version of Armadillo!
//It also unpacks UPX if it's detected...

//Created by Mr. eXoDia // T.P.o.D.T 2011.26.04

//FOR USE OF RESEARCH ONLY!

//Tested on the following versions (not all with UPX):
//3.05
//3.10.???? (Custom Build!) (OEP-finder ONLY!)
//3.70a
//3.72
//3.77.0021 (Custom Build!) (OEP-finder ONLY!)
//3.78.0194 (Custom Build!) (OEP-finder ONLY!)
//4.00.0230 (Custom Build!)
//4.00.0053 (Custom Build!)
//4.10
//4.30a
//4.40
//4.42
//4.44
//4.62
//4.66
//5.00
//5.02
//5.40
//5.42
//6.05Alpha1
//6.40.0329 (Custom Build!)
//6.60.0140 (Custom Build!)
//6.62
//7.00Beta3
//7.00.0081 (Custom Build!)
//7.05Alpha6b
//7.20
//7.25Alpha9
//7.40
//8.00
//8.20
//8.40Beta1
//8.40

Armadillo byte signatures used:
//#6800010000# = push 100
//#E8????????# = call XXXXXXXX
//#5?# = push ?
//#FFD?# = call [register]
//#5F5253# = "_RS"
//#3A53494D554C41544545585049524544# = ":SIMULATEEXPIRED"

dbh
bc
bphwc

var OpenMutexA
var GetEnvironmentVariableA
var VirtualProtect
var LoadLibraryA
var CreateThread
var compare
var ImageBase
var junk_finder

pusha
exec
push 0
call GetModuleHandleA
ende
mov ImageBase, eax
popa

gpa "OpenMutexA", "kernel32.dll"
mov OpenMutexA, $RESULT

gpa "GetEnvironmentVariableA", "kernel32.dll"
mov GetEnvironmentVariableA, $RESULT

gpa "VirtualProtect", "kernel32.dll"
mov VirtualProtect, $RESULT

gpa "LoadLibraryA", "kernel32.dll"
mov LoadLibraryA, $RESULT

gpa "CreateThread", "kernel32.dll"
mov CreateThread, $RESULT

msgyn "Is the target using Debug-Blocker?"
cmp $RESULT, 0
je standard_protection

bp OpenMutexA
erun
bc
estep
bp OpenMutexA
erun
bc
rtr
mov eax,1

standard_protection:

msgyn "Armadillo NAG? (Click No if you are unsure)"
cmp $RESULT, 1
je arm_nag

bp GetEnvironmentVariableA
erun
bc
mov compare, [esp+4]
cmp [compare], #5F5253#
estep
jne standard_protection

loop1:
bp OpenMutexA
erun
bc
mov compare, [esp+C]
add compare, 8
cmp [compare], #3A53494D554C41544545585049524544#
estep
jne loop1

bp VirtualProtect
erun
bc
jmp no_nag

arm_nag:
msg "Click the pause (F12) button if NAG is loaded. Click OK to continue..."
erun

no_nag:
bp LoadLibraryA
erun
bc
mov junk_finder, ebp
add junk_finder, 4

bphws [junk_finder], "x"
erun
bphwc

find [junk_finder], #6800010000#
find $RESULT, #E8????????#
gci $RESULT, DESTINATION
asm $RESULT, "retn"

loop2:
bp CreateThread
erun
bc
rtr
esti
find eip, #5?#
cmp eip, $RESULT
jne loop2

bc
rtr
esti
find eip, #FFD?#
inc $RESULT
find $RESULT, #FFD?#

bp $RESULT
erun
bc
esti

find eip, #60#
cmp eip, $RESULT
jne done

msgyn "Do you want me to unpack the detected UPX protection?"
cmp $RESULT, 0
je done

//My UPX Script:
find eip, #61#
cmp $RESULT, 0
je fail

bp $RESULT
erun
bc $RESULT
find eip, #E9????????#
cmp $RESULT, 0
jne normal

find eip, #C3#
cmp $RESULT, 0
jne normal

find eip, #E8????????#
cmp $RESULT, 0
jne normal

jmp fail

normal:
bp $RESULT
erun
bc $RESULT
esti
jmp done

fail:
msg "Fail with unpacking UPX, do this manually..."

done:
mov OEP, eip
mov OEP_rva, eip
sub OEP_rva, ImageBase

bc
dbs //Unhide from IsDebuggerPresent
eval "OEP: {OEP}, ({OEP_rva}), Imports Fixed: Yes!"
msg $RESULT