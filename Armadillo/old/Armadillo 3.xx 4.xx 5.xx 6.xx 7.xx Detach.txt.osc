/*

Armadillo Detach Parent from Child

*/

//Variable Declarations

var WaitForDebugEvent
var WriteProcessMemory
var ResumeThread
var DebugActiveProcessStop
var ProcessBuffer
var ChildProcessID
var ChildOEP
var OEPBytes
var Patch1

dbh

bphwc                                      // Clear any hardware breakpoints
bpmc                                       // Clear any memory breakpoint
bc                                         // Clear any saved breakpoints
lc                                         // Clear the log window

msg "Set Ollydbg to pass all exceptions and add custom exceptions C0000005, C000001D, C000001E, C0000096 and E06D7363.\r\n\r\n press OK to continue."

gpa "WaitForDebugEvent", "kernel32.dll" 
mov WaitForDebugEvent, $RESULT
gpa "WriteProcessMemory", "kernel32.dll" 
mov WriteProcessMemory, $RESULT
gpa "ResumeThread", "kernel32.dll"
mov ResumeThread, $RESULT
gpa "DebugActiveProcessStop", "kernel32.dll"
mov DebugActiveProcessStop, $RESULT
add WriteProcessMemory, 05

bp WriteProcessMemory
erun
bc WriteProcessMemory

sub WriteProcessMemory, 05
bp WriteProcessMemory
erun

bc WriteProcessMemory
mov ProcessBuffer, esp
add ProcessBuffer, 08
mov ProcessBuffer, [ProcessBuffer]
mov ChildOEP, ProcessBuffer
mov ProcessBuffer, esp
add ProcessBuffer, 0C
mov ProcessBuffer, [ProcessBuffer]
mov OEPBytes, [ProcessBuffer]
rev OEPBytes
mov OEPBytes, $RESULT
mov [ProcessBuffer], #EBFE#
mov ChildProcessID, esp
sub ChildProcessID, 6C
mov ChildProcessID, [ChildProcessID]

eval "Successfully Patched OEP = {ChildOEP} of Child Process (PID = {ChildProcessID}) from {OEPBytes} to EBFE, only change back first 2 bytes!\r\n\r\nCheck log for more info. Press OK to continue." 
log $RESULT
msg $RESULT

bp ResumeThread
erun
bc ResumeThread
rtr

mov Patch1, eip
eval "push {ChildProcessID}"
asm Patch1, $RESULT
add Patch1, 05
eval "call {DebugActiveProcessStop}"
asm Patch1, $RESULT
add Patch1, 05
eval "nop"
asm Patch1, $RESULT

bp Patch1
erun

bc Patch1
msg "Script Completed Successfully! More Info in Log. Have fun!"
ret